/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include "./keymap_italian.h"

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homewrow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <175>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <31 39 40 41 30 18 19 32 20 21 33 35 34 23 22 10 11 9 8 7 6>;
            flavor = "balanced";
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <175>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <38 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "balanced";
            hold-trigger-on-release;             // delay positional check until key-release
        };

        layers: layers {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERS";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        gaming {
            bindings = <&tog 3>;
            key-positions = <37 39>;
            require-prior-idle-ms = <0>;
        };

        media {
            bindings = <&none>;
            key-positions = <36 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // LAYER 0: BASE
            // -----------------------------------------------------------------------------------------
            // |   Q   |   W   |   E   |   R   |   T   | |   Y   |   U   |   I   |   O   |   P   |
            // | A/SFT | S/CTL | D/ALT | F/GUI |   G   | |   H   | J/GUI | K/ALT | L/CTL | ;/SFT |
            // |   Z   |   X   |   C   |   V   |   B   | |   N   |   M   |   ,   |   .   |   /   |
            // -----------------------------------------------------------------------------------------
            //           |  TAB  | RSE/ESC |  SPC  |   | LWR/ENT |  BKSP | SYS/ALT |            

            bindings = <
&kp Q              &kp W         &kp E            &kp R             &kp T        &kp Y            &kp U          &kp I             &kp O         &kp P            
&hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &hml LGUI F       &kp G        &kp H            &hmr RGUI J    &hmr RIGHT_ALT K  &hmr RCTRL L  &hmr RSHFT SEMI 
&kp Z              &kp X         &kp C            &kp V             &kp B        &kp N            &kp M          &kp COMMA         &kp DOT       &kp FSLH         
                                                 &kp TAB         &layers 2 ESCAPE  &kp SPACE    &layers 1 ENTER  &kp BACKSPACE  &layers 4 RET
            >;
        };

        lower_layer {
            // LAYER 1: LOWER (NUM & NAV)
            // -----------------------------------------------------------------------------------------
            // |   1   |   2   |   3   |   4   |   5   | |   6   |   7   |   8   |   9   |   0   |
            // |       |       |       |       |       | |  LFT  |  DWN  |  UP   |  RGT  |       |
            // |   <   |   >   |       |       |       | |       |       |       |       |       |
            // -----------------------------------------------------------------------------------------
            //           |  GUI  |         |  SPC  |   |  ENT  |         |  ALT  |


            bindings = <
&kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0 
&kp IT_BSLH   &kp IT_PIPE  &trans   &trans   &trans     &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans
&kp IT_LESS        &kp IT_GREAT        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // LAYER 2: RAISE (SYMBOLS)
            // -----------------------------------------------------------------------------------------
            // |   !   |   "   |   £   |   $   |   %   | |   &   |   /   |   (   |   )   |   =   |
            // |   +   |   *   |   #   |   ~   |   |   | |   '   |   ì   |   [   |   ]   |   è   |
            // |       |       |       |       |       | |   ?   |   ^   |   {   |   }   |   ù   |
            // -----------------------------------------------------------------------------------------
            //           |  GUI  |         |  SPC  |   |  ENT  |         |  ALT  |

            bindings = <
&kp IT_EXCL  &kp IT_DQUOT  &kp IT_PND  &kp IT_USD  &kp IT_PERC               &kp IT_AND  &kp IT_FSLH   &kp IT_LPAR  &kp IT_RPAR      &kp IT_EQL  
&kp RIGHT_BRACKET    &kp IT_AST   &kp IT_HASH    &kp IT_TILDE    &kp IT_PIPE       &kp IT_SQUOT  &kp IT_IGRV  &kp IT_LBKT  &kp IT_RBKT  &kp IT_EGRV  
&trans    &trans  &trans    &trans    &trans                            &kp IT_QUES  &kp IT_CARET   &kp IT_LBRC  &kp IT_RBRC  &kp IT_UGRV

                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp Q  &kp W  &kp E     &kp R   &kp T        &kp Y      &kp U          &kp I          &kp O    &kp P     
&kp A  &kp S  &kp D     &kp F   &kp G        &kp H      &kp J          &kp K          &kp L    &kp SEMI  
&kp Z  &kp X  &kp C     &kp V   &kp B        &kp N      &kp M          &kp COMMA      &kp DOT  &kp FSLH 
                         &kp LGUI  &trans  &kp SPACE    &kp ENTER  &kp BACKSPACE  &kp RIGHT_ALT
            >;
        };

        layer_4 {
            // LAYER 4: SYSTEM & MEDIA
            // -----------------------------------------------------------------------------------------
            // |       |       |       |       | BOOT  | |       | VOL-  | MUTE  | VOL+  |       |
            // | BT 0  | BT 1  | BT 2  | BT 3  | SOFF  | |       | PREV  | PLAY  | NEXT  |       |
            // |       |       |       |       | UNLCK | |       |       |       |       |       |
            // -----------------------------------------------------------------------------------------
            //           |       |       | EPWR  |   |       |       |       |

            bindings = <
&trans  &trans  &trans  &trans  &bootloader           &trans  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &soft_off                &trans  &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans
&trans  &trans  &trans  &trans  &studio_unlock        &trans  &trans             &trans            &trans           &trans 
                &trans  &trans  &ext_power EP_OFF     &trans  &trans             &trans
            >;
        };
    };
};
